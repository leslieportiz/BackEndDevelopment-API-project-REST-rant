{"version":3,"sources":["index.tsx"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,qCAAqC;AACrC,wBAAwB;AACxB,sBAAsB;AACtB,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAA;AAC1B,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAClC,IAAM,GAAG,GAAG,OAAO,EAAE,CAAA;AACrB,IAAM,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;AAEjD,mBAAmB;AACnB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAA;AACtC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;AAC7B,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC,YAAY,EAAE,CAAC,CAAA;AAChE,GAAG,CAAC,GAAG,CAAE,OAAO,CAAC,MAAM,CAAE,QAAQ,CAAC,CAAC,CAAA;AACnC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;AAC/C,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAA;AAElC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,IAAS,EAAE,GAAuC;IAC5D,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AACpB,CAAC,CAAC,CAAA;AAEJ,GAAG,CAAC,GAAG,CAAC,SAAS,EAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAA;AAElD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,IAAS,EAAE,GAAqC;IAC1D,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AAC3B,CAAC,CAAC,CAAA;AAEF,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAQ,EAAE,GAAuC;IAC3D,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;AAC1B,CAAC,CAAC,CAAA;AAEF,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA","file":"index.js","sourcesContent":["// require('dotenv').config()\r\n// const express = require('express')\r\n// const app = express()\r\n// Modules and Globals\r\nrequire('dotenv').config()\r\nconst express = require('express')\r\nconst app = express()\r\nconst methodOverride = require('method-override')\r\n\r\n// Express Settings\r\napp.set('views', __dirname + '/views')\r\napp.set('view engine', 'jsx')\r\napp.engine('jsx', require('express-react-views').createEngine())\r\napp.use (express.static ('public'))\r\napp.use(express.urlencoded({ extended: true }))\r\napp.use(methodOverride('_method'))\r\n\r\napp.get('/', (_req: any, res: { render: (arg0: string) => void }) => {\r\n    res.render('home')\r\n  })\r\n  \r\napp.use('/places',require('./controllers/places'))\r\n\r\napp.get('/', (_req: any, res: { send: (arg0: string) => void }) => {\r\n    res.send('Rest Rant !')\r\n})\r\n\r\napp.get('*', (req: any, res: { render: (arg0: string) => void }) => {\r\n    res.render('error404')\r\n})\r\n\r\napp.listen(process.env.PORT)\r\n"]}